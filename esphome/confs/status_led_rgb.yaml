##########################
# ESP RGB Status LED

# all ok - white
# app error - pulse red
# app warning - pulse yellow
# ap enabled - pulse white
# on network disconnected - fast pulse red
# api disconnected - fast pulse yellow
# hp error - 
# heating - orange
# cooling - blue
# dhw - purple

# using experimental control for now
# https://github.com/esphome/esphome/pull/5814
api:
  on_disconnect:
    then:
      - light.turn_on:
          id: led
          red: 1.0
          green: 1.0
          blue: 0.0
          brightness: 1.0
          effect: fast_pulse

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO35
    num_leds: 1
    name: "Status LED"
    id: led
    method: ESP32_RMT
    effects:
      - pulse:
          name: slow_pulse
          transition_length: 1s
          update_interval: 2s
      - pulse:
          name: fast_pulse
          transition_length: 500ms
          update_interval: 1s

text_sensor:
  - platform: copy
    source_id: status_operation
    id: status_operation_monitor
    internal: true
    on_value:
      then:
        - lambda: |-
            if (x == "heating") {
              id(led).turn_on({
                red: 1.0, green: 0.65, blue: 0.0, brightness: 1.0
              });
            } else if (x == "cooling") {
              id(led).turn_on({
                red: 0.0, green: 0.0, blue: 1.0, brightness: 1.0
              });
            } else if (x == "hotwater") {
              id(led).turn_on({
                red: 1.0, green: 0.0, blue: 1.0, brightness: 1.0
              });
            } else {
              id(led).turn_off();
            }

on_boot:
  priority: -100
  then:
    - light.turn_on:
        id: led
        red: 1.0
        green: 1.0
        blue: 1.0
        brightness: 1.0
        effect: none

  on_app_error:
    then:
    - light.turn_on:
        id: led
        red: 100%
        green: 0%
        blue: 0%
        brightness: 100%
        effect: slow_pulse
  on_app_warning:
    then:
    - light.turn_on:
        id: led
        red: 100%
        green: 100%
        blue: 0%
        brightness: 100%
        effect: slow_pulse
  on_wifi_ap_enabled:
    then:
    - light.turn_on:
        id: led
        red: 100%
        green: 100%
        blue: 100%
        brightness: 100%
        effect: slow_pulse
  on_network_disconnected:
    then:
    - light.turn_on:
        id: led
        red: 100%
        green: 0%
        blue: 0%
        brightness: 100%
        effect: fast_pulse
  on_api_disconnected:
    then:
    - light.turn_on:
        id: led
        red: 100%
        green: 100%
        blue: 0%
        brightness: 100%
        effect: fast_pulse
  on_custom_status:
    - trigger_id: heating
      group: hp
      then:
        - light.turn_on:
            id: led
            red: 100%
            green: 65%
            blue: 0%
            brightness: 100%
            effect: None
    - trigger_id: cooling
      group: hp
      then:
        - light.turn_on:
            id: led
            red: 0%
            green: 0%
            blue: 100%
            brightness: 100%
            effect: None
    - trigger_id: hotwater
      group: hp
      then:
        - light.turn_on:
            id: led
            red: 100%
            green: 0%
            blue: 100%
            brightness: 100%
            effect: None

text_sensor:
  - platform: copy
    source_id: status_operation
    id: status_operation_monitor
    internal: true
    on_value:
      then:
        - if:
            condition:
              lambda: return x == "${heating}";
            then:
              - status.push:
                  trigger_id: heating
        - if:
            condition:
              lambda: return x == "${cooling}";
            then:
              - status.push:
                  trigger_id: cooling
        - if:
            condition:
              lambda: return x == "${hotwater}";
            then:
              - status.push:
                  trigger_id: hotwater
        - if: 
            condition:
              - lambda: return ((x != "${heating}") && (x != "${cooling}") && (x != "${hotwater}"));
            then:
              - status.pop:
                  group: "hp"
